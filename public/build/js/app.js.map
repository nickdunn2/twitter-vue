{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nVue.component('tweets', {\n    template: '#tweets-template',\n\n    data: function data() {\n        return {\n            newTweet: '',\n            list: [],\n            likes: 0 // put this in props? or this should maybe be where we start adding multiple components\n            // the tweets component will house or nest the individual tweet component\n        };\n    },\n\n    ready: function ready() {\n        this.fetchTweetList();\n    },\n\n    methods: {\n        fetchTweetList: function fetchTweetList() {\n            this.$http.get('api/tweets').then(function (response) {\n                var tweets = response.data;\n                this.list = tweets;\n            }.bind(this), function (response) {\n                console.log(response.status, response.statusText);\n            });\n        },\n\n        addTweet: function addTweet() {\n            var tweet_content = this.newTweet.trim();\n            if (tweet_content) {\n                this.$http.post('api/tweets', { tweet_content: tweet_content });\n                this.fetchTweetList();\n                this.newTweet = '';\n            }\n        },\n\n        deleteTweet: function deleteTweet(tweet) {\n            swal({\n                title: \"Are you sure?\",\n                text: \"You will not be able to recover this tweet!\",\n                type: \"warning\",\n                showCancelButton: true,\n                allowOutsideClick: true,\n                confirmButtonColor: \"#DD6B55\",\n                confirmButtonText: \"Yes, delete it!\",\n                cancelButtonText: \"No, cancel!\",\n                closeOnConfirm: false,\n                closeOnCancel: true\n            }, function () {\n                this.$http.delete('api/tweets/' + tweet.id).then(function (response) {\n                    this.list.$remove(tweet);\n                    swal({\n                        title: \"Deleted!\",\n                        text: \"Your tweet has been deleted.\",\n                        type: \"success\",\n                        showConfirmButton: false,\n                        timer: 1500\n                    });\n                }).error(function (error) {\n                    console.log(error);\n                    alert(error);\n                });\n            }.bind(this));\n        }\n    }\n});\n\nVue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('content');\n\nnew Vue({\n    el: '#main'\n});\n\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}